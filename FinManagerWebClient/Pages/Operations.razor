@page "/operations"
@using FinManagerWebClient.DTO.Operation
@using FinManagerWebClient.Components.Operations
@inject IOperationService operationService
@inject IJSRuntime jsRuntime

<PageTitle>Operations</PageTitle>

<OperationsTable Operations="@operations"
                 OperationWasRemovedCallback="@LoadOperationsAsync"
                 EditingRowWasChosenCallback="@EditRowAsync"/>

<OperationForm Operation="@operation"
               OperationsWereChangedCallback="@LoadOperationsAsync"
               @bind-SubmitBtnText="submitBtnText"/>

@code {
    OperationVM operation = new OperationVM();
    List<OperationVM> operations = new List<OperationVM>();
    string submitBtnText = "Добавить";

    protected override async Task OnInitializedAsync()
    {
        await LoadOperationsAsync();
        base.OnInitialized();
    }

    async Task EditRowAsync(int id)
    {
        try
        {
            operation = await operationService.GetAsync(id);
            submitBtnText = "Сохранить";
        }
        catch (Exception ex)
        {
            await jsRuntime.InvokeVoidAsync("alert", ex.Message);
        }    
    }

    private async Task LoadOperationsAsync()
    {
        operations = await operationService.GetAllAsync();
    }
}
